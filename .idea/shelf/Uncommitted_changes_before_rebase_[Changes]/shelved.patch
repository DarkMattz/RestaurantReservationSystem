Index: .classpath
===================================================================
diff --git a/.classpath b/.classpath
deleted file mode 100644
--- a/.classpath	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
-	<classpathentry kind="src" path="src"/>
-	<classpathentry kind="output" path="bin"/>
-</classpath>
Index: src/controller/CustomerController.java
===================================================================
diff --git a/src/controller/CustomerController.java b/src/controller/CustomerController.java
deleted file mode 100644
--- a/src/controller/CustomerController.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,4 +0,0 @@
-package controller;
-
-public class CustomerController {
-}
Index: .idea/runConfigurations.xml
===================================================================
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
deleted file mode 100644
--- a/.idea/runConfigurations.xml	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RunConfigurationProducerService">
-    <option name="ignoredProducers">
-      <set>
-        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
-      </set>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: src/controller/ManagerController.java
===================================================================
diff --git a/src/controller/ManagerController.java b/src/controller/ManagerController.java
deleted file mode 100644
--- a/src/controller/ManagerController.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,4 +0,0 @@
-package controller;
-
-public class ManagerController {
-}
Index: src/data/FoodHandler.java
===================================================================
diff --git a/src/data/FoodHandler.java b/src/data/FoodHandler.java
deleted file mode 100644
--- a/src/data/FoodHandler.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,43 +0,0 @@
-package data;
-
-import java.util.Vector;
-
-public class FoodHandler {
-
-	private Vector<Food> food = new Vector<>();
-	
-	public void AddFood(String foodId, String foodName, Integer foodPrice) {
-		food.add(new Food(foodId, foodName, foodPrice));
-	}
-
-	public void DeleteFood(String foodId) {
-		for(int i = 0; i < food.size(); i++) {
-			Food getFood = food.get(i);
-			
-			if(getFood.getFoodId().equals(foodId)) {
-				food.remove(i);
-				break;
-			}
-		}
-	}
-	
-	public void UpdateFood(String foodId, String foodName, Integer foodPrice) {
-		
-		int input = 0;
-		
-		for(int i = 0; i < food.size(); i++) {
-			Food getFood = food.get(i);
-			
-			if(getFood.getFoodId().equals(foodId)) {
-				input = i;
-				break;
-			}
-		}
-		
-		Food getFood = food.get(input);
-		
-		getFood.setFoodId(foodId);
-		getFood.setFoodName(foodName);
-		getFood.setFoodPrice(foodPrice);
-	}
-}
Index: src/data/OrderedFood.java
===================================================================
diff --git a/src/data/OrderedFood.java b/src/data/OrderedFood.java
deleted file mode 100644
--- a/src/data/OrderedFood.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,25 +0,0 @@
-package data;
-
-import data.Food;
-
-public class OrderedFood{
-    private Food food;
-    private int quantity;
-
-    public OrderedFood(Food food, int quantity) {
-        this.food = food;
-        this.quantity = quantity;
-    }
-
-    public Food getFood() {
-        return food;
-    }
-
-    public int getQuantity() {
-        return quantity;
-    }
-
-    public void setQuantity(int quantity) {
-        this.quantity = quantity;
-    }
-}
Index: src/userdata/Admin.java
===================================================================
diff --git a/src/userdata/Admin.java b/src/userdata/Admin.java
deleted file mode 100644
--- a/src/userdata/Admin.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,25 +0,0 @@
-package userdata;
-
-import java.util.Random;
-
-public class Admin extends User{
-	Random rand = new Random();
-	
-	public Admin() {
-		super();
-		
-	}
-	
-	public Admin(String id, String email, String password, String name, String type) {
-		super(id, email, password, name, type);
-		
-	}
-
-	@Override
-	public String generateId() {
-		
-		return "AD" + rand.nextInt(10) + rand.nextInt(10) + rand.nextInt(10);
-		
-	}
-
-}
Index: src/data/Customer.java
===================================================================
diff --git a/src/data/Customer.java b/src/data/Customer.java
deleted file mode 100644
--- a/src/data/Customer.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,43 +0,0 @@
-package data;
-
-public class Customer {
-    private String email;
-    private String password;
-    private String name;
-    private String phone;
-
-    public Customer(String email, String password, String name, String phone) {
-        this.email = email;
-        this.password = password;
-        this.name = name;
-        this.phone = phone;
-    }
-
-    public String getEmail() {
-        return email;
-    }
-
-    public String getPassword() {
-        return password;
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public String getPhone() {
-        return phone;
-    }
-
-    public void setPassword(String password) {
-        this.password = password;
-    }
-
-    public void setName(String name) {
-        this.name = name;
-    }
-
-    public void setPhone(String phone) {
-        this.phone = phone;
-    }
-}
Index: src/data/Table.java
===================================================================
diff --git a/src/data/Table.java b/src/data/Table.java
deleted file mode 100644
--- a/src/data/Table.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,33 +0,0 @@
-package data;
-
-public class Table {
-    private int tableNumber;
-    private int capacity;
-    private boolean isEmpty;
-
-    public Table(int tableNumber, int capacity) {
-        this.tableNumber = tableNumber;
-        this.capacity = capacity;
-        this.isEmpty = true;
-    }
-
-    public int getTableNumber() {
-        return tableNumber;
-    }
-
-    public int getCapacity() {
-        return capacity;
-    }
-
-    public boolean isEmpty() {
-        return isEmpty;
-    }
-
-    public void setCapacity(int capacity) {
-        this.capacity = capacity;
-    }
-
-    public void setEmpty(boolean empty) {
-        isEmpty = empty;
-    }
-}
Index: src/data/Waiter.java
===================================================================
diff --git a/src/data/Waiter.java b/src/data/Waiter.java
deleted file mode 100644
--- a/src/data/Waiter.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,23 +0,0 @@
-package data;
-
-public class Waiter {
-    public String waiterID;
-    public String waiterName;
-
-    public Waiter(String waiterID, String waiterName) {
-        this.waiterID = waiterID;
-        this.waiterName = waiterName;
-    }
-
-    public String getWaiterID() {
-        return waiterID;
-    }
-
-    public String getWaiterName() {
-        return waiterName;
-    }
-
-    public void setWaiterName(String waiterName) {
-        this.waiterName = waiterName;
-    }
-}
Index: .idea/modules.xml
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
deleted file mode 100644
--- a/.idea/modules.xml	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/Restaurant Reservation System.iml" filepath="$PROJECT_DIR$/Restaurant Reservation System.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/misc.xml
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
deleted file mode 100644
--- a/.idea/misc.xml	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="openjdk-17" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
-</project>
\ No newline at end of file
Index: src/data/TransactionHandler.java
===================================================================
diff --git a/src/data/TransactionHandler.java b/src/data/TransactionHandler.java
deleted file mode 100644
--- a/src/data/TransactionHandler.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,41 +0,0 @@
-package data;
-
-import java.util.Vector;
-
-public class TransactionHandler {
-	
-	private Vector<Transaction> transaction = new Vector<>();	
-	
-	public void NewTransaction(String customerId, Integer tableNumber, Vector<Food> food, Integer date) {
-		String transactionId = "TR" + (int)Math.ceil(Math.random()*10) + (int)Math.ceil(Math.random()*10) + (int)Math.ceil(Math.random()*10);
-		
-		transaction.add(new Transaction(transactionId, customerId, tableNumber, food, date));
-	}
-	
-	public void DeleteTransaction(String transactionId) {
-		
-		for(int i = 0; i < transaction.size(); i++) {
-			Transaction getTransaction = transaction.get(i);
-			
-			if(getTransaction.getTransactionId().equals(transactionId)) {
-				transaction.remove(i);
-				break;
-			}
-		}
-	}
-	
-	public void ShowTransaction() {
-		
-		for(int i = 0; i < transaction.size(); i++) {
-			Transaction getTransaction = transaction.get(i);
-			java.util.Date time = new java.util.Date((long)getTransaction.getDate() *1000);
-			
-			System.out.println("Transaction ID: " + getTransaction.getTransactionId());
-			System.out.println("Date: " + time);
-			System.out.println("Customer ID: " + getTransaction.getCustomerId());
-			System.out.println("Table Number: " + getTransaction.getTableNumber());
-			System.out.println("Ordered Foods:");
-			System.out.println(" " + getTransaction.getFoods());
-			}
-		}
-	}
Index: Restaurant Reservation System.iml
===================================================================
diff --git a/Restaurant Reservation System.iml b/Restaurant Reservation System.iml
deleted file mode 100644
--- a/Restaurant Reservation System.iml	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: src/data/Transaction.java
===================================================================
diff --git a/src/data/Transaction.java b/src/data/Transaction.java
deleted file mode 100644
--- a/src/data/Transaction.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,61 +0,0 @@
-package data;
-
-import java.util.Vector;
-
-public class Transaction {
-
-	private String transactionId;
-	private String customerId;
-	private Integer tableNumber;
-	private Vector<Food> food = new Vector<>();
-	private Integer date;
-	
-	public Transaction(String transactionId, String customerId, Integer tableNumber, Vector<Food> food, Integer date) {
-		super();
-		this.transactionId = transactionId;
-		this.customerId = customerId;
-		this.tableNumber = tableNumber;
-		this.food = food;
-		this.date = date;
-	}
-
-	public String getTransactionId() {
-		return transactionId;
-	}
-
-	public void setTransactionId(String transactionId) {
-		this.transactionId = transactionId;
-	}
-
-	public String getCustomerId() {
-		return customerId;
-	}
-
-	public void setCustomerId(String customerId) {
-		this.customerId = customerId;
-	}
-
-	public Integer getTableNumber() {
-		return tableNumber;
-	}
-
-	public void setTableNumber(Integer tableNumber) {
-		this.tableNumber = tableNumber;
-	}
-
-	public Vector<Food> getFoods() {
-		return food;
-	}
-
-	public void setFoodId(Vector<Food> food) {
-		this.food = food;
-	}
-
-	public Integer getDate() {
-		return date;
-	}
-
-	public void setDate(Integer date) {
-		this.date = date;
-	}
-}
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: .gitignore
===================================================================
diff --git a/.gitignore b/.gitignore
deleted file mode 100644
--- a/.gitignore	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,1 +0,0 @@
-/bin/
Index: src/controller/App.java
===================================================================
diff --git a/src/controller/App.java b/src/controller/App.java
deleted file mode 100644
--- a/src/controller/App.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,352 +0,0 @@
-package controller;
-
-import data.*;
-
-import java.util.ArrayList;
-import java.util.Scanner;
-
-public class App {
-
-    private ArrayList<Customer> customers = new ArrayList<>();
-    private ArrayList<Table> tables = new ArrayList<>();
-    private ArrayList<Food> menu = new ArrayList<>();
-    private ArrayList<Waiter> waiters = new ArrayList<>();
-    private ArrayList<Transaction> transactions = new ArrayList<>();
-
-    private Customer loggedInCustomer = null;
-
-    private Scanner scan = new Scanner(System.in);
-
-    public static void main(String[] args) {
-        new App().run();
-    }
-
-    public void run(){
-
-        //Get all data from CSV files
-        getData();
-
-        //Show first menu
-        int input;
-
-        while(true){
-            System.out.println("WELCOME TO THE RESTAURANT");
-            System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~");
-            System.out.println("1. Customer Menu");
-            System.out.println("2. Manager Menu");
-            System.out.println("3. Exit");
-            System.out.print(">> ");
-
-            try {
-                input = Integer.parseInt(scan.nextLine());
-            } catch (NumberFormatException e){
-                input = 0;
-            }
-
-            switch (input){
-                case 1:
-                    customer();
-                    break;
-                case 2:
-                    manager();
-                    break;
-                case 3:
-                    System.out.println("Thank you for using our service");
-                    System.exit(0);
-                    break;
-                default:
-                    System.out.println("Please input from 1 to 3");
-            }
-        }
-    }
-
-    private void getData(){
-//
-//        Scanner reader = null;
-//
-//        //Create save directory
-//        File saveDir = new File("SaveFile");
-//
-//        saveDir.mkdir();
-//
-//        //Get customer files
-//        File customerSaveFile = new File("SaveFile\\Customer.csv");
-//
-//        if(!customerSaveFile.exists()){
-//            try {
-//                customerSaveFile.createNewFile();
-//            } catch (IOException e) {
-//                System.out.println(e.toString());
-//            }
-//        }
-//
-//        try {
-//            reader = new Scanner(customerSaveFile);
-//        } catch (FileNotFoundException ignored){
-//        }
-//
-
-    }
-
-    private void customer() {
-        int input;
-        do {
-            System.out.println("Hello Customer!!!");
-            System.out.println("~~~~~~~~~~~~~~~~~");
-            System.out.println("1. Register as a new Customer");
-            System.out.println("2. Reserve a place");
-            System.out.println("3. Edit your profile");
-            System.out.println("4. Go back");
-            System.out.print(">> ");
-
-            try {
-                input = Integer.parseInt(scan.nextLine());
-            } catch (NumberFormatException e){
-                input = 3;
-            }
-
-            switch (input) {
-                case 1:
-                    register();
-                    break;
-                case 2:
-                    reserve();
-                    break;
-                case 3:
-                    editProfile();
-                    break;
-                default:
-                    System.out.println("Please input from 1 to 4");
-            }
-        } while (input != 4);
-    }
-
-    private void reserve() {
-
-    }
-
-    private void editProfile() {
-        if(loggedInCustomer != null || login()){
-            int input = 0;
-            do {
-                System.out.println("Edit your profile");
-                System.out.println("~~~~~~~~~~~~~~~~~");
-                System.out.println("1. Edit your name");
-                System.out.println("2. Edit your phone number");
-                System.out.println("3. Edit your password");
-                System.out.println("4. Go back");
-                System.out.print(">> ");
-
-
-                try {
-                    input = Integer.parseInt(scan.nextLine());
-                } catch (NumberFormatException e) {
-                    System.out.println("Please input from 1 to 4");
-                }
-
-                switch (input) {
-                    case 1:
-                        String name;
-
-                        System.out.print("Input your name: ");
-                        name = scan.nextLine();
-
-                        loggedInCustomer.setName(name);
-                        break;
-                    case 2:
-                        String phone;
-
-                        System.out.print("Input your Phone: ");
-                        phone = scan.nextLine();
-
-                        loggedInCustomer.setPhone(phone);
-                        break;
-                    case 3:
-                        String password;
-
-                        do {
-                            System.out.print("Input your password [Must not be blank]: ");
-                            password = scan.nextLine();
-                        } while (password.isBlank());
-
-                        loggedInCustomer.setPassword(password);
-                        break;
-                    case 4:
-                        break;
-                    default:
-                        System.out.println("Please input from 1 to 4");
-
-                }
-            } while (input != 4);
-        }
-    }
-
-    private boolean login() {
-        if(!customers.isEmpty()) {
-            do {
-                String email;
-
-                do {
-                    System.out.print("Input your email [Must not be blank | press 0 to quit]: ");
-
-                    email = scan.nextLine();
-                } while (email.isBlank());
-
-                if (email.equals("0")) {
-                    return false;
-                }
-
-                String password;
-
-                do {
-                    System.out.print("Input your password [Must not be blank | press 0 to quit]: ");
-                    password = scan.nextLine();
-                } while (password.isBlank());
-
-                if (password.equals("0")) {
-                    return false;
-                }
-
-                for (Customer customer : customers) {
-                    if (customer.getEmail().equals(email) && customer.getPassword().equals(password)) {
-                        loggedInCustomer = customer;
-                        return true;
-                    } else {
-                        System.out.println("Wrong email or password");
-                    }
-                }
-            } while (true);
-        } else {
-            System.out.println("No customer in the system");
-            return false;
-        }
-    }
-
-    private void register() {
-        String email;
-
-        do {
-            System.out.print("Input your email [Must not be blank]: ");
-            email = scan.nextLine();
-
-            for (Customer customer : customers) {
-                if (customer.getEmail().equals(email)) {
-                    System.out.println("Email already used");
-                    email = "";
-                }
-            }
-        } while (email.isBlank());
-
-        String password;
-
-        do {
-            System.out.print("Input your password [Must not be blank]: ");
-            password = scan.nextLine();
-        } while (password.isBlank());
-
-        String name;
-
-        System.out.print("Input your name: ");
-        name = scan.nextLine();
-
-        String phone;
-
-        System.out.print("Input your phone: ");
-        phone = scan.nextLine();
-
-        customers.add(new Customer(email, password, name, phone));
-    }
-
-
-
-    private void manager() {
-        int input;
-        do {
-            System.out.println("Hello Manager!!!");
-            System.out.println("~~~~~~~~~~~~~~~~~");
-            System.out.println("1. View all registered customers");
-            System.out.println("2. Manage tables");
-            System.out.println("3. Manage menus");
-            System.out.println("4. Transaction manager");
-            System.out.println("5. Go back");
-            System.out.print(">> ");
-
-            try {
-                input = Integer.parseInt(scan.nextLine());
-            }  catch (NumberFormatException e){
-                input = -1;
-            }
-
-            switch (input) {
-                case 1:
-                    viewAllCustomers();
-                    break;
-                case 2:
-                    manageTables();
-                    break;
-                case 3:
-                    manageMenu();
-                    break;
-                case 4:
-                    transactionManager();
-                    break;
-                case 5:
-                    break;
-                default:
-                    System.out.println("Please input from 1 to 5");
-            }
-
-        } while(input != 5);
-    }
-
-    private void transactionManager() {
-    }
-
-
-    private void manageMenu() {
-        int input;
-
-        do{
-            System.out.println("Menu Management");
-            System.out.println("~~~~~~~~~~~~~~~~~");
-            System.out.println("1. Add new menu");
-            System.out.println("2. View all menus");
-            System.out.println("3. Remove menu");
-            System.out.println("4. Go back");
-
-            try {
-                input = Integer.parseInt(scan.nextLine());
-            } catch (NumberFormatException e){
-                input = 0;
-            }
-
-            switch (input) {
-                case 1:
-                    break;
-                case 2:
-                    break;
-                case 3:
-                    break;
-                case 4:
-                    break;
-                default:
-                    System.out.println("Please input from 1 to 4");
-            }
-        }while (input != 4);
-    }
-
-    private void manageTables() {
-    }
-
-    private void viewAllCustomers() {
-        System.out.println("All registered customers: ");
-        for (Customer customer : customers) {
-            System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
-            System.out.println("Email: " + customer.getEmail());
-            System.out.println("Name: " + customer.getName());
-            System.out.println("Phone: " + customer.getPhone());
-            System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
-        }
-    }
-
-}
Index: src/userdata/User.java
===================================================================
diff --git a/src/userdata/User.java b/src/userdata/User.java
deleted file mode 100644
--- a/src/userdata/User.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,65 +0,0 @@
-package userdata;
-
-public abstract class User {
-	private String id;
-	private String email;
-	private String password;
-	private String name;
-	private String type;
-	
-	public abstract String generateId();
-	
-	public User(String id, String email, String password, String name, String type) {
-		super();
-		this.id = id;
-		this.email = email;
-		this.password = password;
-		this.name = name;
-		this.type = type;
-	}
-
-	public String getId() {
-		return id;
-	}
-
-	public void setId(String id) {
-		this.id = id;
-	}
-
-	public String getEmail() {
-		return email;
-	}
-	
-	public void setEmail(String email) {
-		this.email = email;
-	}
-
-	public String getPassword() {
-		return password;
-	}
-
-	public void setPassword(String password) {
-		this.password = password;
-	}
-
-	public String getName() {
-		return name;
-	}
-
-	public void setName(String name) {
-		this.name = name;
-	}
-
-	public String getType() {
-		return type;
-	}
-
-	public void setType(String type) {
-		this.type = type;
-	}
-
-	public User() {
-		
-	}
-
-}
Index: .idea/uiDesigner.xml
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
deleted file mode 100644
--- a/.idea/uiDesigner.xml	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,124 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Palette2">
-    <group name="Swing">
-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
-      </item>
-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
-        <initial-values>
-          <property name="text" value="Button" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="RadioButton" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="CheckBox" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="Label" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
-          <preferred-size width="-1" height="20" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
-      </item>
-    </group>
-  </component>
-</project>
\ No newline at end of file
Index: src/userdata/Customer.java
===================================================================
diff --git a/src/userdata/Customer.java b/src/userdata/Customer.java
deleted file mode 100644
--- a/src/userdata/Customer.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,23 +0,0 @@
-package userdata;
-
-import java.util.Random;
-
-public class Customer extends User{
-	Random rand = new Random();
-	
-	public Customer() {
-		super();
-	}
-	
-	public Customer(String id, String email, String password, String name, String type) {
-		super(id, email, password, name, type);
-		// TODO Auto-generated constructor stub
-	}
-
-	@Override
-	public String generateId() {
-
-		return "CU" + rand.nextInt(10) + rand.nextInt(10) + rand.nextInt(10);
-	}
-
-}
Index: .idea/vcs.xml
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
deleted file mode 100644
--- a/.idea/vcs.xml	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: .project
===================================================================
diff --git a/.project b/.project
deleted file mode 100644
--- a/.project	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>RestaurantReservationSystem</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-</projectDescription>
Index: src/data/Food.java
===================================================================
diff --git a/src/data/Food.java b/src/data/Food.java
deleted file mode 100644
--- a/src/data/Food.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,37 +0,0 @@
-package data;
-
-public class Food {
-    private String foodId;
-    private String foodName;
-    private Integer foodPrice;
-
-    public Food(String foodId, String foodName, Integer foodPrice) {
-        this.foodId = foodId;
-        this.foodName = foodName;
-        this.foodPrice = foodPrice;
-    }
-
-    public String getFoodId() {
-        return foodId;
-    }
-
-    public String getFoodName() {
-        return foodName;
-    }
-    
-    public Integer getFoodPrice() {
-    	return foodPrice;
-    }
-
-	public void setFoodId(String foodId) {
-		this.foodId = foodId;
-	}
-
-	public void setFoodName(String foodName) {
-		this.foodName = foodName;
-	}
-
-	public void setFoodPrice(Integer foodPrice) {
-		this.foodPrice = foodPrice;
-	}
-}
Index: src/userdata/Userhandler.java
===================================================================
diff --git a/src/userdata/Userhandler.java b/src/userdata/Userhandler.java
deleted file mode 100644
--- a/src/userdata/Userhandler.java	(revision cb70f33626312212e0b699da0166eda8238d19d2)
+++ /dev/null	(revision cb70f33626312212e0b699da0166eda8238d19d2)
@@ -1,122 +0,0 @@
-package userdata;
-
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-public class Userhandler {
-	
-	private User user = null;
-	
-	public String register(String email, String name, String password) {
-		
-		String regexEmail = "^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,6}$";
-		String regexPassword = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#&()�[{}]:;',?/*~$^+=<>]).{8,20}$";
-		
-		boolean isEmailValid = false;
-		boolean isNameValid = false;
-		boolean isPassValid = false;
-		
-		boolean doILoveYou = true;
-		
-//		Validasi Email
-		if(email.isEmpty()) {
-			
-			return "Input your email address !";
-		}else{
-			
-			Pattern pattern = Pattern.compile(regexEmail, Pattern.CASE_INSENSITIVE);
-			Matcher matcher = pattern.matcher(email);
-			
-			// Jika email sesuai dengan pattern regex
-			if(matcher.matches()) {
-	
-				isEmailValid = true;
-			}
-			
-			// Jika email tidak sesuai dengan pattern regex
-			else {
-				
-				return "Email pattern is incorrect !";			
-			}
-		}
-		
-//		Validasi nama
-		if(name.isEmpty()) {
-			return "Input your name !";
-		}else{
-			
-			if(name.length() < 2 ) {
-				
-				return "Name is too short !";
-			}else {
-				
-				isNameValid = true;
-			}
-		}
-		
-//		Validasi password
-		if(password.isEmpty()) {
-			
-			return "Input your password !";
-		}else {
-			
-			Pattern pattern = Pattern.compile(regexPassword);
-			Matcher matcher = pattern.matcher(email);
-
-			if(password.length() < 8) {
-				
-				return "Password is too short !";
-				
-			}else if(matcher.matches()){
-				
-				isPassValid = true;
-			}
-
-		}	
-		
-		if(!isEmailValid) {
-			
-			System.out.println("Email is not valid");
-		}
-		
-		if(!isNameValid) {
-			
-			System.out.println("Username is not valid");
-		}
-		
-		if(!isPassValid) {
-			
-			System.out.println("Password is not valid");
-		}
-		
-			
-			
-		if(isEmailValid && isNameValid && isPassValid) {
-			
-			
-			return null;
-		}
-		
-		return "Register data is incorrect !";
-	}
-	
-	public String login(String email, String password) {
-		
-		return null;
-	}
-	
-	public String logout() {
-		
-		return null;
-	}
-	
-	public String removeUser(String id) {
-		
-		return null;
-	}
-	
-	public Userhandler() {
-		
-	}
-
-}
